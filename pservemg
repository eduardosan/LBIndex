#!/bin/bash

# NOTE: Trata-se de um utilitário p/ usar o "pserve" como um serviço 
# padrão. Embora, "pserve" não seja indicado para produção optamos por 
# "pserve" pq os comandos recebidos pelo LBI são os mínimos possíveis. 
# Perceba ainda que o controle desse serviço é todo "stand alone" (PID 
# e tudo o mais). Isso é útil para termos vários serviços funcionando 
# de forma independente e em portas diferentes! By Questor


stop_svc() {
    printf "Stopping pserve:"
    get_pid
    if [ "$GET_PID_RTN" != "" ]; then
        kill -9 "$GET_PID_RTN"
        rm -f pservepid
        echo "                                            [  OK  ]"
    else
        echo "                                            [FAILED]"
    fi
}

start_svc() {
    printf "Starting pserve:"
    get_pid
    if [ "$GET_PID_RTN" == "" ]; then
        rm -f pserveop
        jobs &>/dev/null
        /usr/local/lbneo/virtenvlb2.6/bin/pserve development.ini >pserveop 2>&1 &
        new_job_started="$(jobs -n)"
        if [ -n "$new_job_started" ]; then
            PID=$!
        else
            PID=
        fi

        sleep 1

        PSERVEOP=$(<pserveop)
        rm -f pserveop

        if [[ $PSERVEOP != "" ]]; then
            echo "                                            [FAILED]"
            echo "$PSERVEOP"
        else
            printf "$PID" > pservepid
            echo "                                            [  OK  ]"
        fi
    else
        echo ""
    fi
}

status_svc() {
    get_pid
    if [ "$GET_PID_RTN" == "" ]; then
        echo "pserve is stopped"
    else
        echo "pserve (pid  $GET_PID_RTN) is running..."
    fi
}

restart_svc() {
    stop_svc
    start_svc
}

# NOTE: Obtêm o arquivo "PID" ("pservepid") criado por "pservemg" 
# para controle do processo do "pserve"! Se o "PID" atual não for 
# mais válido deleta o "pservepid"! By Questor
GET_PID_RTN=""
get_pid() {
    GET_PID_RTN=""
    if [ -f pservepid ]; then
        PSERVEPIDVAL=$(<pservepid)
        if ps -p $PSERVEPIDVAL > /dev/null
        then
           GET_PID_RTN="$PSERVEPIDVAL"
        else
           rm -f pservepid
        fi
    fi
}

# NOTE: Usamos "$@" ao invés "$1" por ser mais seguro, pois "$@" traz todos os 
# parâmetros após diferente de "$1" onde "start foo" dispararia "start" no 
# serviço! By Questor
case "$@" in
    start)
        echo "start"
        start_svc
    ;;
    stop)
        echo "stop"
        stop_svc
    ;;
    restart)
        echo "restart"
        restart_svc
    ;;
    status)
        echo "status"
        status_svc
    ;;
    *)
        echo "Usage: pservemg {start|stop|restart|status}"
        exit 1
    ;;
esac

exit 1
